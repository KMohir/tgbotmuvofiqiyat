#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!
"""

import psycopg2
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def connect_db():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = psycopg2.connect(
            host=os.getenv('DB_HOST', 'localhost'),
            dbname=os.getenv('DB_NAME', 'centris_bot'),
            user=os.getenv('DB_USER', 'postgres'),
            password=os.getenv('DB_PASS'),
            port=os.getenv('DB_PORT', '5432')
        )
        return conn
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

def show_current_data():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ"""
    conn = connect_db()
    if not conn:
        return
    
    cursor = conn.cursor()
    
    try:
        # –ì—Ä—É–ø–ø—ã –≤ users
        cursor.execute("SELECT user_id, name FROM users WHERE is_group = 1")
        groups = cursor.fetchall()
        print(f"\nüìã –ì—Ä—É–ø–ø –≤ users: {len(groups)}")
        for group_id, name in groups:
            print(f"  - {group_id}: {name}")
        
        # –ì—Ä—É–ø–ø—ã –≤ whitelist
        cursor.execute("SELECT chat_id, title FROM group_whitelist")
        whitelist = cursor.fetchall()
        print(f"\n‚úÖ –ì—Ä—É–ø–ø –≤ whitelist: {len(whitelist)}")
        for chat_id, title in whitelist:
            print(f"  - {chat_id}: {title}")
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ security
        cursor.execute("SELECT user_id, name FROM user_security")
        users = cursor.fetchall()
        print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ security: {len(users)}")
        for user_id, name in users:
            print(f"  - {user_id}: {name}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()

def clear_all_groups():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≥—Ä—É–ø–ø—ã"""
    conn = connect_db()
    if not conn:
        return
    
    cursor = conn.cursor()
    
    try:
        print("\nüóëÔ∏è –û—á–∏—â–∞—é –≤—Å–µ –≥—Ä—É–ø–ø—ã...")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ group_video_settings
        cursor.execute("DELETE FROM group_video_settings")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≥—Ä—É–ø–ø: {cursor.rowcount}")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ group_whitelist
        cursor.execute("DELETE FROM group_whitelist")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –∏–∑ whitelist: {cursor.rowcount}")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ users
        cursor.execute("DELETE FROM users WHERE is_group = 1")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –≥—Ä—É–ø–ø –∏–∑ users: {cursor.rowcount}")
        
        conn.commit()
        print("‚úÖ –í—Å–µ –≥—Ä—É–ø–ø—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        conn.rollback()
    finally:
        cursor.close()
        conn.close()

def clear_specific_group(group_id):
    """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É"""
    conn = connect_db()
    if not conn:
        return
    
    cursor = conn.cursor()
    
    try:
        print(f"\nüóëÔ∏è –û—á–∏—â–∞—é –≥—Ä—É–ø–ø—É {group_id}...")
        
        # –£–¥–∞–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        cursor.execute("DELETE FROM group_video_settings WHERE chat_id = %s", (str(group_id),))
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {cursor.rowcount}")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ whitelist
        cursor.execute("DELETE FROM group_whitelist WHERE chat_id = %s", (group_id,))
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –∏–∑ whitelist: {cursor.rowcount}")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ users
        cursor.execute("DELETE FROM users WHERE user_id = %s AND is_group = 1", (group_id,))
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –∏–∑ users: {cursor.rowcount}")
        
        conn.commit()
        print(f"‚úÖ –ì—Ä—É–ø–ø–∞ {group_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã: {e}")
        conn.rollback()
    finally:
        cursor.close()
        conn.close()

def clear_all_users():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    conn = connect_db()
    if not conn:
        return
    
    cursor = conn.cursor()
    
    try:
        print("\nüóëÔ∏è –û—á–∏—â–∞—é –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ user_security
        cursor.execute("DELETE FROM user_security")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ security: {cursor.rowcount}")
        
        # –£–¥–∞–ª—è–µ–º –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –≥—Ä—É–ø–ø—ã) –∏–∑ users
        cursor.execute("DELETE FROM users WHERE is_group = 0")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ users: {cursor.rowcount}")
        
        conn.commit()
        print("‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        conn.rollback()
    finally:
        cursor.close()
        conn.close()

def main():
    print("üóÑÔ∏è –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    while True:
        print("\nüìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üëÄ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ")
        print("2. üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≥—Ä—É–ø–ø—ã")
        print("3. üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É")
        print("4. üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("5. üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ (–û–ü–ê–°–ù–û!)")
        print("6. üö™ –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (1-6): ").strip()
        
        if choice == "1":
            show_current_data()
            
        elif choice == "2":
            confirm = input("‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –≥—Ä—É–ø–ø—ã? (yes/no): ").strip().lower()
            if confirm == "yes":
                clear_all_groups()
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                
        elif choice == "3":
            try:
                group_id = int(input("üÜî –í–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã: ").strip())
                clear_specific_group(group_id)
            except ValueError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –≥—Ä—É–ø–ø—ã")
                
        elif choice == "4":
            confirm = input("‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? (yes/no): ").strip().lower()
            if confirm == "yes":
                clear_all_users()
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                
        elif choice == "5":
            confirm = input("üö® –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ! –í—ã —É–≤–µ—Ä–µ–Ω—ã? (YES/NO): ").strip()
            if confirm == "YES":
                clear_all_groups()
                clear_all_users()
                print("üö® –í–°–ï –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã!")
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                
        elif choice == "6":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6.")

if __name__ == "__main__":
    main() 