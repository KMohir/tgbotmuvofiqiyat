#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from db import db
    
    def test_user_duplication():
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        test_user_id = 999999999
        test_name = "Test User"
        test_phone = "+998991234567"
        
        print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID={test_user_id}, Name={test_name}, Phone={test_phone}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        exists_before = db.user_exists(test_user_id)
        print(f"   –°—É—â–µ—Å—Ç–≤–æ–≤–∞–ª –¥–æ —Ç–µ—Å—Ç–∞: {'‚úÖ –î–∞' if exists_before else '‚ùå –ù–µ—Ç'}")
        
        # –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        print("\n1Ô∏è‚É£ –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è...")
        result1 = db.add_user(test_user_id, test_name, test_phone)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if result1 else '‚ùå –û—à–∏–±–∫–∞'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        exists_after1 = db.user_exists(test_user_id)
        print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {'‚úÖ –î–∞' if exists_after1 else '‚ùå –ù–µ—Ç'}")
        
        # –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞)
        print("\n2Ô∏è‚É£ –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è...")
        result2 = db.add_user(test_user_id, test_name, test_phone)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if result2 else '‚ùå –û—à–∏–±–∫–∞ (–æ–∂–∏–¥–∞–µ–º–æ)'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        exists_after2 = db.user_exists(test_user_id)
        print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {'‚úÖ –î–∞' if exists_after2 else '‚ùå –ù–µ—Ç'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        name = db.get_name(test_user_id)
        phone = db.get_phone(test_user_id)
        reg_time = db.get_registration_time(test_user_id)
        
        print(f"   –ò–º—è: {name}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
        print(f"   –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_time}")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        try:
            cursor = db.conn.cursor()
            cursor.execute("DELETE FROM users WHERE user_id = %s", (test_user_id,))
            db.conn.commit()
            print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
        
        print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        if result1 and not result2 and exists_after1 and exists_after2:
            print("‚úÖ –¢–µ—Å—Ç –ü–†–û–ô–î–ï–ù: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ")
        else:
            print("‚ùå –¢–µ—Å—Ç –ù–ï –ü–†–û–ô–î–ï–ù: –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–≥–∏–∫–æ–π")
    
    def test_existing_users():
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        print("\nüë• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        try:
            cursor = db.conn.cursor()
            cursor.execute("SELECT COUNT(*) FROM users")
            total = cursor.fetchone()[0]
            print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total}")
            
            cursor.execute("SELECT COUNT(*) FROM users WHERE is_subscribed = 1")
            subscribed = cursor.fetchone()[0]
            print(f"   –ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö: {subscribed}")
            
            cursor.execute("SELECT COUNT(*) FROM users WHERE is_banned = 1")
            banned = cursor.fetchone()[0]
            print(f"   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {banned}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
    
    if __name__ == "__main__":
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print("=" * 60)
        
        test_user_duplication()
        test_existing_users()
        
        print("\n" + "=" * 60)
        print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
