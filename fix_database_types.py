#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ SQL –∑–∞–ø—Ä–æ—Å–∞—Ö
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É: operator does not exist: text = bigint
"""

import re
import os

def fix_db_types():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ db.py"""
    
    db_file = "db.py"
    
    try:
        with open(db_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
        backup_file = f"{db_file}.backup"
        with open(backup_file, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_file}")
        
        # –°–ø–∏—Å–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        fixes = [
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É chat_id –≤ SQL –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã group_video_settings
            (r'(\(.*?), (chat_id)\)', r'\1, str(\2))'),
            (r'(\(.*?), (chat_id), (.*?)\)', r'\1, str(\2), \3)'),
            (r'(\([^)]*), (chat_id)(\))', r'\1, str(\2)\3'),
            
            # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
            (r'cursor\.execute\([\'"]([^"\']*WHERE chat_id = %s)[\'"], \((.*?chat_id.*?)\)\)', 
             r'cursor.execute("\1", (\2,))' if 'str(' not in r'\2' else r'cursor.execute("\1", (\2))'),
        ]
        
        new_content = content
        
        # –†—É—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–æ–±–ª–µ–º–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        replacements = [
            # –°—Ç—Ä–æ–∫–∞ 242
            ('FROM group_video_settings WHERE chat_id = %s", (chat_id,)', 
             'FROM group_video_settings WHERE chat_id = %s", (str(chat_id),)'),
            
            # –°—Ç—Ä–æ–∫–∏ —Å UPDATE –∏ SELECT –¥–ª—è group_video_settings
            ('WHERE chat_id = %s",\n                    (json.dumps(viewed_videos), chat_id)', 
             'WHERE chat_id = %s",\n                    (json.dumps(viewed_videos), str(chat_id))'),
            
            ('WHERE chat_id = %s", (chat_id,)', 'WHERE chat_id = %s", (str(chat_id),)'),
            ('WHERE chat_id = %s", (chat_id)', 'WHERE chat_id = %s", (str(chat_id))'),
            ('WHERE chat_id = %s\', (chat_id,)', 'WHERE chat_id = %s\', (str(chat_id),)'),
            ('WHERE chat_id = %s\', (chat_id)', 'WHERE chat_id = %s\', (str(chat_id))'),
            
            # –î–ª—è –º–µ—Ç–æ–¥–æ–≤ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            (', chat_id)', ', str(chat_id))'),
            (', chat_id,)', ', str(chat_id),)'),
        ]
        
        for old, new in replacements:
            new_content = new_content.replace(old, new)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã
        if new_content != content:
            with open(db_file, 'w', encoding='utf-8') as f:
                f.write(new_content)
            print(f"‚úÖ –§–∞–π–ª {db_file} –æ–±–Ω–æ–≤–ª–µ–Ω")
            print("üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
            print("   - –í—Å–µ chat_id –≤ SQL –∑–∞–ø—Ä–æ—Å–∞—Ö —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ str()")
            print("   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ 'operator does not exist: text = bigint'")
            return True
        else:
            print("‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–∏—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def restore_backup():
    """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞"""
    backup_file = "db.py.backup"
    db_file = "db.py"
    
    try:
        if os.path.exists(backup_file):
            with open(backup_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            with open(db_file, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ {backup_file}")
            return True
        else:
            print("‚ùå –§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ db.py")
    print("=" * 40)
    
    print("üìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö")
    print("2. üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞")
    print("3. üö™ –í—ã—Ö–æ–¥")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ (1-3): ").strip()
    
    if choice == "1":
        if fix_db_types():
            print("\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
            print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏")
            
    elif choice == "2":
        if restore_backup():
            print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏")
            
    elif choice == "3":
        print("üëã –í—ã—Ö–æ–¥")
        
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä") 