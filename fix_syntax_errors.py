#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ parse_mode
"""

import re
import os

def fix_syntax_errors_in_file(filepath):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–∞–π–ª–µ"""
    print(f"–ò—Å–ø—Ä–∞–≤–ª—è—é —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤: {filepath}")
    
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ —Ç–∏–ø–∞: func("text")), parse_mode="Markdown"
    # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: func("text", parse_mode="Markdown")
    patterns = [
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—è—Ç–æ–π
        (r'(\w+\([^)]*\))\),\s*parse_mode="Markdown"', r'\1, parse_mode="Markdown")'),
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω—ã–µ —Å–∫–æ–±–∫–∏
        (r'(\w+\([^)]*\))\)\),\s*parse_mode="Markdown"', r'\1, parse_mode="Markdown")'),
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–∏ –≥–¥–µ parse_mode –ø–æ–ø–∞–ª –≤–Ω—É—Ç—Ä—å —Å—Ç—Ä–æ–∫–∏
        (r'(f"[^"]*), parse_mode="Markdown"([^"]*")', r'\1\2'),
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–∏ –≥–¥–µ parse_mode –≤ f-string
        (r'datetime\.now\(\),\s*parse_mode="Markdown"\.strftime', r'datetime.now().strftime'),
    ]
    
    fixes_count = 0
    for pattern, replacement in patterns:
        matches = re.findall(pattern, content)
        if matches:
            print(f"  üîß –ò—Å–ø—Ä–∞–≤–ª—è—é {len(matches)} –æ—à–∏–±–æ–∫ —Ç–∏–ø–∞: {pattern[:50]}...")
            content = re.sub(pattern, replacement, content)
            fixes_count += len(matches)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixes_count} —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ {filepath}")
    return fixes_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    files_to_fix = [
        'handlers/users/group_video_commands.py',
        'handlers/users/security.py',
        'handlers/users/user_commands.py',
        'handlers/groups/group_handler.py',
    ]
    
    total_fixes = 0
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö\n")
    
    for filepath in files_to_fix:
        if os.path.exists(filepath):
            fixes = fix_syntax_errors_in_file(filepath)
            total_fixes += fixes
        else:
            print(f"  ‚ö†Ô∏è  –§–∞–π–ª {filepath} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\n‚úÖ –ó–ê–í–ï–†–®–ï–ù–û! –í—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {total_fixes} —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫")

if __name__ == "__main__":
    main()
