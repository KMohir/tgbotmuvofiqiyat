from datetime import datetime, timedelta
import logging

try:

    from aiogram import types
    from aiogram.dispatcher import FSMContext
    from aiogram.dispatcher.filters.builtin import CommandStart
    from aiogram.types import ParseMode, Message, ReplyKeyboardRemove
    from db import db
    from keyboards.default.reply import key, get_lang_for_button, main_menu_keyboard
    from loader import dp, bot
    from states.state import RegistrationStates
    from translation import _
    import time

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger = logging.getLogger(__name__)

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_last_message = {}

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–∞–º–∞
    def is_spam(user_id):
        current_time = time.time()
        if user_id in user_last_message:
            last_message_time = user_last_message[user_id]
            if current_time - last_message_time < 1:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ - 1 —Å–µ–∫—É–Ω–¥–∞
                return True
        user_last_message[user_id] = current_time
        return False

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –≤–∏–¥–µ–æ
    def get_video_caption() -> str:
        caption = (
            "‚úÖ1/15\n\n"
            "–ú–∞–≤–∑—É: Centris Towers'–¥–∞–≥–∏ –ª–æ–±–±–∏\n\n"
            "–ò–±—Ä–æ“≥–∏–º –ú–∞–º–∞—Å–∞–∏–¥–æ–≤ \"Centris Towers\" –ª–æ–π–∏“≥–∞—Å–∏ –∞—Å–æ—Å—á–∏—Å–∏\n\n"
            "Centris Towers - –∏–Ω–Ω–æ–≤–∞—Ü–∏—è –≤–∞ –∑–∞–º–æ–Ω–∞–≤–∏–π —É—Å–ª—É–± –≥—É–ª–ª–∞–±-—è—à–Ω–∞–π–¥–∏–≥–∞–Ω —è–Ω–≥–∏ –∞–≤–ª–æ–¥ –±–∏–∑–Ω–µ—Å –º–∞—Ä–∫–∞–∑–∏\n\n"
            "üìû –ê–ª–æ“õ–∞ —É—á—É–Ω: <a href=\"tel:+998501554444\">+998501554444</a>\n\n"
            "<a href=\"https://t.me/centris1\">–ú–µ–Ω–µ–∂–µ—Ä –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à</a>\n\n"
            "(<a href=\"https://yandex.ru/maps/org/110775045050\">üìç–ú–∞–Ω–∑–∏–ª: –¢–æ—à–∫–µ–Ω—Ç —à–∞“≥—Ä–∏, –ù—É—Ä–æ–Ω–∏–π–ª–∞—Ä –∫—û—á–∞—Å–∏ 2</a>)\n"
            "üöÄ<a href=\"https://t.me/centris_towers\">–¢–µ–ª–µ–≥—Ä–∞–º</a> ‚Ä¢ "
            "üì∑<a href=\"https://www.instagram.com/centristowers_uz/\">–ò–Ω—Å—Ç–∞–≥—Ä–∞–º</a> ‚Ä¢ "
            "‚è∏<a href=\"https://www.youtube.com/@CentrisTowers\">You Tube</a>"
        )
        return caption

    @dp.message_handler(CommandStart())
    async def bot_start(message: types.Message):
        try:
            if is_spam(message.from_user.id):
                logger.warning(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ø–∞–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
                return

            user_id = message.from_user.id
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            current_state = dp.current_state(user=user_id, chat=message.chat.id)
            if current_state:
                current_state_data = await current_state.get_state()
                if current_state_data and current_state_data.startswith('RegistrationStates:'):
                    await message.answer("‚è≥ **Siz allaqachon ro'yxatdan o'tish jarayonida!**\n\nIltimos, avvalgi xabarni to'ldiring.")
                    return

            if not db.user_exists(user_id):
                logger.info(f"Foydalanuvchi {user_id} ro'yxatdan o'tishni boshladi")
                await bot.send_message(
                    message.from_user.id,
                    'Assalomu aleykum, Centris Towers yordamchi botiga hush kelibsiz!'
                )
                await message.answer("Ismingizni kiriting")
                await RegistrationStates.name.set()
            else:
                logger.info(f"Foydalanuvchi {user_id} allaqachon ro'yxatdan o'tgan")
                try:
                    await bot.copy_message(
                        chat_id=message.chat.id,
                        from_chat_id=-1002550852551,
                        message_id=135,
                        caption='',
                        parse_mode="HTML",
                        reply_markup=get_lang_for_button(message),
                        protect_content=True
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}: {e}")
                    await message.answer("Video yuborishda xato yuz berdi. Iltimos, keyinroq urinib ko'ring.")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start: {e}")
            await message.answer("Xatolik yuz berdi. Iltimos, keyinroq urinib ko'ring.")

    @dp.message_handler(state=RegistrationStates.name)
    async def register_name_handler(message: types.Message, state: FSMContext):
        try:
            if is_spam(message.from_user.id):
                return

            user_id = message.from_user.id
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if db.user_exists(user_id):
                logger.warning(f"Foydalanuvchi {user_id} allaqachon ro'yxatdan o'tgan, lekin name state da")
                await message.answer("‚ùå **Siz allaqachon ro'yxatdan o'tgansiz!**")
                await state.finish()
                return

            name = message.text.strip()
            if len(name) < 2:
                await message.answer("‚ùå **Ism juda qisqa**\n\nIltimos, kamida 2 ta belgi kiriting:")
                return
                
            if len(name) > 100:
                await message.answer("‚ùå **Ism juda uzun**\n\nIltimos, 100 belgidan kam bo'lgan ism kiriting:")
                return

            async with state.proxy() as data:
                data['name'] = name

            logger.info(f"Foydalanuvchi {user_id} ismini kiritdi: {name}")
            await message.answer("Telefon raqamingizni kiriting", reply_markup=key())
            await RegistrationStates.phone.set()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}")
            await message.answer("Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")
            await state.finish()

    @dp.message_handler(state=RegistrationStates.phone, content_types=types.ContentType.TEXT)
    async def process_phone_text(message: Message, state: FSMContext):
        try:
            if is_spam(message.from_user.id):
                return

            user_id = message.from_user.id
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if db.user_exists(user_id):
                logger.warning(f"Foydalanuvchi {user_id} allaqachon ro'yxatdan o'tgan, lekin phone state da")
                await message.answer("‚ùå **Siz allaqachon ro'yxatdan o'tgansiz!**")
                await state.finish()
                return

            contact = message.text.strip()
            if contact.startswith('+998') and len(contact) == 13:
                logger.info(f"Foydalanuvchi {user_id} telefon raqamini kiritdi: {contact}")
                await save_user_data(message, state, contact)
            else:
                await message.answer(
                    "Telefon raqam noto'g'ri kiritildi, iltimos telefon raqamni +998XXXXXXXXX formatda kiriting yoki 'Kontakni yuborish' tugmasiga bosing.",
                    reply_markup=key()
                )
                await RegistrationStates.phone.set()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {message.from_user.id}: {e}")
            await message.answer("Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")
            await state.finish()

    @dp.message_handler(state=RegistrationStates.phone, content_types=types.ContentType.CONTACT)
    async def process_phone_contact(message: Message, state: FSMContext):
        try:
            if is_spam(message.from_user.id):
                return

            user_id = message.from_user.id
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if db.user_exists(user_id):
                logger.warning(f"Foydalanuvchi {user_id} allaqachon ro'yxatdan o'tgan, lekin phone contact state da")
                await message.answer("‚ùå **Siz allaqachon ro'yxatdan o'tgansiz!**")
                await state.finish()
                return

            contact = message.contact.phone_number
            logger.info(f"Foydalanuvchi {user_id} kontakt orqali telefon raqamini yubordi: {contact}")
            await save_user_data(message, state, contact)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–∞–∑—É
            await message.answer("Ro'yxatdan muvaffaqiyatli o'tdingiz!", reply_markup=ReplyKeyboardRemove())
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}")
            await message.answer("Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")
            await state.finish()

    async def save_user_data(message: Message, state: FSMContext, contact: str):
        try:
            user_id = message.from_user.id
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if db.user_exists(user_id):
                logger.warning(f"Foydalanuvchi {user_id} allaqachon ro'yxatdan o'tgan, save_user_data da")
                await message.answer("‚ùå **Siz allaqachon ro'yxatdan o'tgansiz!**")
                await state.finish()
                return

            async with state.proxy() as data:
                name = data.get('name')
                
            logger.info(f"Foydalanuvchi {user_id} ro'yxatdan o'tishni yakunladi: {name}, {contact}")
            
            # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            success = db.add_user(user_id, name, contact)
            if not success:
                logger.warning(f"Foydalanuvchi {user_id} ni qo'shishda xatolik yoki allaqachon mavjud")
                await message.answer("‚ùå **Xatolik yuz berdi yoki siz allaqachon ro'yxatdan o'tgansiz!**")
                await state.finish()
                return
            
            # –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            db.update(user_id, name, contact)
            
            caption = get_video_caption()
            try:
                await bot.copy_message(
                    chat_id=message.chat.id,
                    from_chat_id=-1002550852551,
                    message_id=135,
                    caption='',
                    parse_mode="HTML",
                    reply_markup=get_lang_for_button(message),
                    protect_content=True
                )
                logger.info(f"Foydalanuvchi {user_id} ga video yuborildi")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ {user_id}: {e}")
                await message.answer("Video yuborishda xato yuz berdi. Iltimos, keyinroq urinib ko'ring.")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await message.answer("Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")
        finally:
            await state.finish()

except Exception as exx:
    from datetime import datetime

    # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    now = datetime.now()

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    formatted_date_time = now.strftime("%Y-%m-%d %H:%M:%S")
    print('start ',  f"{time }formatted_date_time",f"error {exx}" )