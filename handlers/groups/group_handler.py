from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from data.config import ADMINS
from loader import dp, db
import logging


@dp.my_chat_member_handler()
async def my_chat_member_handler(message: types.ChatMemberUpdated):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ
    if message.chat.type in [types.ChatType.GROUP, types.ChatType.SUPERGROUP]:
        # –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ - "—É—á–∞—Å—Ç–Ω–∏–∫" (member) –∏–ª–∏ "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" (administrator)
        if message.new_chat_member.status in [types.ChatMemberStatus.MEMBER, types.ChatMemberStatus.ADMINISTRATOR]:
            group_id = message.chat.id
            group_title = message.chat.title
            added_by = message.from_user.id
            added_by_name = message.from_user.full_name

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –≥—Ä—É–ø–ø–∞
            if db.is_group_banned(group_id):
                # –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏–º –∏–∑ –Ω–µ—ë
                await dp.bot.leave_chat(group_id)
                logging.info(f"–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∏–Ω—É–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É '{group_title}' (ID: {group_id})")
                return

            # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –≤ –±–∞–∑—É (–∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞)
            db.add_user(
                user_id=group_id,
                name=group_title,
                phone=None,  # –£ –≥—Ä—É–ø–ø –Ω–µ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                is_group=True,  # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
                group_id=None  # –î–ª—è —Å–∞–º–æ–π –≥—Ä—É–ø–ø—ã group_id –Ω–µ –Ω—É–∂–µ–Ω
            )
            logging.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É '{group_title}' (ID: {group_id}). –ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±–∞–∑–µ.")

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞
            keyboard = InlineKeyboardMarkup(row_width=2)
            allow_callback = f"allow_group_{group_id}"
            ban_callback = f"ban_group_{group_id}"
            
            logging.info(f"–°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å callback_data: allow={allow_callback}, ban={ban_callback}")
            
            keyboard.add(
                InlineKeyboardButton("‚úÖ –†–∞–∑—Ä–µ—à–∏—Ç—å", callback_data=allow_callback),
                InlineKeyboardButton("‚ùå –ó–∞–ø—Ä–µ—Ç–∏—Ç—å", callback_data=ban_callback)
            )

            # –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            for admin in ADMINS:
                await dp.bot.send_message(
                    admin, 
                    f"ü§ñ –ë–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É:\n"
                    f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {group_title}\n"
                    f"üÜî ID –≥—Ä—É–ø–ø—ã: {group_id}\n"
                    f"üë§ –î–æ–±–∞–≤–∏–ª: {added_by_name} (ID: {added_by})\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=keyboard
                )

        # –ï—Å–ª–∏ –±–æ—Ç–∞ —É–¥–∞–ª–∏–ª–∏ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤ –≥—Ä—É–ø–ø–µ
        elif message.new_chat_member.status in [types.ChatMemberStatus.LEFT, types.ChatMemberStatus.KICKED]:
            group_id = message.chat.id
            group_title = message.chat.title

            # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º –≥—Ä—É–ø–ø—É –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
            db.set_subscription_status(group_id, False)
            logging.info(f"–ë–æ—Ç–∞ —É–¥–∞–ª–∏–ª–∏ –∏–∑ –≥—Ä—É–ø–ø—ã '{group_title}' (ID: {group_id}). –ì—Ä—É–ø–ø–∞ –æ—Ç–ø–∏—Å–∞–Ω–∞ –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.")

            # –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–æ–≤
            for admin in ADMINS:
                await dp.bot.send_message(admin, f"üö™ –ë–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã: {group_title}")


@dp.callback_query_handler(lambda c: c.data.startswith(('allow_group_', 'ban_group_')))
async def handle_group_decision(callback_query: types.CallbackQuery):
    logging.info(f"–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –≤—ã–∑–≤–∞–Ω —Å –¥–∞–Ω–Ω—ã–º–∏: {callback_query.data}")
    
    user_id = callback_query.from_user.id
    logging.info(f"Callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, —Ç–∏–ø: {type(user_id)}")
    logging.info(f"ADMINS: {ADMINS}, —Ç–∏–ø: {type(ADMINS)}")
    logging.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: {user_id} in {ADMINS} = {user_id in ADMINS}")
    
    if user_id not in ADMINS:
        logging.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤ {ADMINS}")
        await callback_query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è", show_alert=True)
        return

    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ–º callback_data –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö ID –≥—Ä—É–ø–ø
    parts = callback_query.data.split('_')
    logging.info(f"–†–∞–∑–±–æ—Ä callback_data: {callback_query.data}")
    logging.info(f"–ß–∞—Å—Ç–∏ –ø–æ—Å–ª–µ split('_'): {parts}")
    
    action = parts[0]  # allow –∏–ª–∏ ban (–ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å)
    group_id = int('_'.join(parts[2:]))  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ ID
    logging.info(f"–î–µ–π—Å—Ç–≤–∏–µ: {action}, ID –≥—Ä—É–ø–ø—ã: {group_id}")

    if action == "allow":
        # –†–∞–∑—Ä–µ—à–∞–µ–º –≥—Ä—É–ø–ø—É
        db.unban_group(group_id)
        await callback_query.message.edit_text(
            f"‚úÖ –ì—Ä—É–ø–ø–∞ {group_id} —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫—É."
        )
        logging.info(f"–ê–¥–º–∏–Ω {callback_query.from_user.id} —Ä–∞–∑—Ä–µ—à–∏–ª –≥—Ä—É–ø–ø—É {group_id}")

    elif action == "ban":
        # –ó–∞–ø—Ä–µ—â–∞–µ–º –≥—Ä—É–ø–ø—É –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –Ω–µ—ë
        db.ban_group(group_id)
        try:
            await dp.bot.leave_chat(group_id)
            await callback_query.message.edit_text(
                f"‚ùå –ì—Ä—É–ø–ø–∞ {group_id} –∑–∞–ø—Ä–µ—â–µ–Ω–∞. –ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É."
            )
            logging.info(f"–ê–¥–º–∏–Ω {callback_query.from_user.id} –∑–∞–ø—Ä–µ—Ç–∏–ª –≥—Ä—É–ø–ø—É {group_id}, –±–æ—Ç –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É")
        except Exception as e:
            await callback_query.message.edit_text(
                f"‚ùå –ì—Ä—É–ø–ø–∞ {group_id} –∑–∞–ø—Ä–µ—â–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∏–Ω—É—Ç—å –≥—Ä—É–ø–ø—É: {e}"
            )
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã {group_id}: {e}")

    await callback_query.answer() 