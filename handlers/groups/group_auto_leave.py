"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –∏–∑ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø
"""

import logging
from aiogram import types
from aiogram.dispatcher.filters import ChatTypeFilter
from loader import dp
from db import db
from data.config import SUPER_ADMIN_ID, ADMINS

logger = logging.getLogger(__name__)

def is_super_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º"""
    admin_ids = [SUPER_ADMIN_ID]
    for admin in ADMINS:
        try:
            if isinstance(admin, str):
                admin_ids.append(int(admin.strip()))
            elif isinstance(admin, int):
                admin_ids.append(admin)
        except (ValueError, AttributeError):
            continue
    return user_id == SUPER_ADMIN_ID or user_id in admin_ids

@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS, chat_type=[types.ChatType.GROUP, types.ChatType.SUPERGROUP])
async def on_new_chat_members(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø—É"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞—à –±–æ—Ç
        bot_user = await message.bot.get_me()
        bot_added = False
        
        for new_member in message.new_chat_members:
            if new_member.id == bot_user.id:
                bot_added = True
                break
        
        if not bot_added:
            return
            
        chat_id = message.chat.id
        chat_title = message.chat.title or f"–ì—Ä—É–ø–ø–∞ {chat_id}"
        added_by_user = message.from_user
        
        logger.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {chat_id} ({chat_title}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {added_by_user.id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–æ–±–∞–≤–∏–≤—à–∏–π —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º
        if is_super_admin(added_by_user.id):
            # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–∞ –≤ –ª—é–±—ã–µ –≥—Ä—É–ø–ø—ã
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –≤ whitelist
            try:
                if not db.is_group_whitelisted(chat_id):
                    cursor = db.conn.cursor()
                    cursor.execute('''
                        INSERT INTO group_whitelist (chat_id, title, status, added_date, added_by)
                        VALUES (%s, %s, %s, NOW(), %s)
                    ''', (chat_id, chat_title, 'active', added_by_user.id))
                    db.conn.commit()
                    cursor.close()
                    
                    await message.reply(
                        f"‚úÖ **Guruh avtomatik avtorizatsiya qilindi**\n\n"
                        f"üìã Guruh nomi: {chat_title}\n"
                        f"üÜî Guruh ID: `{chat_id}`\n"
                        f"üë®‚Äçüíº Administrator tomonidan qo'shildi: {added_by_user.full_name}\n\n"
                        f"ü§ñ Bot endi bu guruhda to'liq ishlay oladi!",
                        parse_mode="Markdown"
                    )
                    logger.info(f"–ì—Ä—É–ø–ø–∞ {chat_id} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ whitelist —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º {added_by_user.id}")
                else:
                    await message.reply(
                        f"‚úÖ **Guruh allaqachon avtorizatsiya qilingan**\n\n"
                        f"ü§ñ Bot bu guruhda ishlashga ruxsat berilgan."
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã {chat_id} –≤ whitelist: {e}")
                await message.reply(
                    "‚ö†Ô∏è **Guruhni avtomatik qo'shishda xatolik**\n\n"
                    "Qo'lda qo'shish uchun administratorga murojaat qiling."
                )
            return
        
        # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º whitelist
        if not db.is_group_whitelisted(chat_id):
            # –ì—Ä—É–ø–ø–∞ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞ - –ø–æ–∫–∏–¥–∞–µ–º
            try:
                await message.reply(
                    "üö´ **Guruh avtorizatsiya qilinmagan**\n\n"
                    f"üìã Guruh: {chat_title}\n"
                    f"üÜî ID: `{chat_id}`\n\n"
                    "‚ùå Bu guruh bot ishlashi uchun ruxsat etilganlar ro'yxatida emas.\n"
                    "ü§ñ Bot avtomatik ravishda guruhni tark etadi.\n\n"
                    "‚úÖ Guruhni qo'shish uchun administratorga murojaat qiling:\n"
                    "üìû Telegram: @admin_username",
                    parse_mode="Markdown"
                )
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å
                import asyncio
                await asyncio.sleep(2)
                
                await message.bot.leave_chat(chat_id)
                logger.warning(f"–ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É {chat_id} ({chat_title}), –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {added_by_user.id}")
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã {chat_id}: {e}")
        else:
            # –ì—Ä—É–ø–ø–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞ - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º
            await message.reply(
                f"üëã **Salom, {chat_title}!**\n\n"
                f"ü§ñ Men video darslar botiman.\n"
                f"‚úÖ Bu guruh avtorizatsiya qilingan.\n\n"
                f"üìπ Men sizga muntazam ravishda ta'lim videolarini yuboraman.\n"
                f"‚öôÔ∏è Sozlamalar uchun administrator bilan bog'laning.",
                parse_mode="Markdown"
            )
            logger.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É {chat_id} ({chat_title})")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ new_chat_members: {e}") 