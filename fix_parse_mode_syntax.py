#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ —Å parse_mode
"""

import re
import os

def fix_parse_mode_syntax(filepath):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å parse_mode"""
    print(f"–ò—Å–ø—Ä–∞–≤–ª—è—é parse_mode —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤: {filepath}")
    
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ —Ç–∏–ø–∞: func("text")), parse_mode="Markdown"
    # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: func("text", parse_mode="Markdown")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω 1: ), parse_mode="Markdown" -> , parse_mode="Markdown")
    pattern1 = r'\),\s*parse_mode="Markdown"'
    replacement1 = r', parse_mode="Markdown")'
    
    matches1 = re.findall(pattern1, content)
    if matches1:
        print(f"  üîß –ò—Å–ø—Ä–∞–≤–ª—è—é {len(matches1)} –æ—à–∏–±–æ–∫ —Ç–∏–ø–∞ '), parse_mode='")
        content = re.sub(pattern1, replacement1, content)
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω 2: reply_markup=something(), parse_mode="Markdown" 
    # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: reply_markup=something(), parse_mode="Markdown")
    pattern2 = r'(reply_markup=[^,)]+\(\)),\s*parse_mode="Markdown"'
    replacement2 = r'\1, parse_mode="Markdown")'
    
    matches2 = re.findall(pattern2, content)
    if matches2:
        print(f"  üîß –ò—Å–ø—Ä–∞–≤–ª—è—é {len(matches2)} –æ—à–∏–±–æ–∫ —Å reply_markup")
        content = re.sub(pattern2, replacement2, content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(content)
    
    total_fixes = len(matches1) + len(matches2)
    print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {total_fixes} —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫")
    return total_fixes

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    filepath = 'handlers/users/group_video_commands.py'
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï PARSE_MODE –°–ò–ù–¢–ê–ö–°–ò–°–ê\n")
    
    if os.path.exists(filepath):
        fixes = fix_parse_mode_syntax(filepath)
        print(f"\n‚úÖ –ó–ê–í–ï–†–®–ï–ù–û! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixes} –æ—à–∏–±–æ–∫")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–ø–∏–ª—è—Ü–∏—é...")
        import subprocess
        result = subprocess.run(['python', '-m', 'py_compile', filepath], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –§–∞–π–ª –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫!")
        else:
            print("‚ùå –í—Å–µ –µ—â–µ –µ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:")
            print(result.stderr)
    else:
        print(f"‚ùå –§–∞–π–ª {filepath} –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == "__main__":
    main()
