#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫ —Å get_time_selection_keyboard
"""

import re

def fix_time_keyboard_errors(filepath):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ —Å get_time_selection_keyboard"""
    print(f"–ò—Å–ø—Ä–∞–≤–ª—è—é –æ—à–∏–±–∫–∏ —Å get_time_selection_keyboard –≤: {filepath}")
    
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: reply_markup=get_time_selection_keyboard(, parse_mode="Markdown")
    # –ù–∞: reply_markup=get_time_selection_keyboard(), parse_mode="Markdown"
    pattern = r'reply_markup=get_time_selection_keyboard\(,\s*parse_mode="Markdown"\)'
    replacement = r'reply_markup=get_time_selection_keyboard(),\n            parse_mode="Markdown"'
    
    matches = re.findall(pattern, content)
    if matches:
        print(f"  üîß –ò—Å–ø—Ä–∞–≤–ª—è—é {len(matches)} –æ—à–∏–±–æ–∫ —Å get_time_selection_keyboard")
        content = re.sub(pattern, replacement, content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {len(matches)} –æ—à–∏–±–æ–∫")
    return len(matches)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    filepath = 'handlers/users/group_video_commands.py'
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –° TIME KEYBOARD\n")
    
    fixes = fix_time_keyboard_errors(filepath)
    print(f"\n‚úÖ –ó–ê–í–ï–†–®–ï–ù–û! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixes} –æ—à–∏–±–æ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–ø–∏–ª—è—Ü–∏—é...")
    import subprocess
    result = subprocess.run(['python', '-m', 'py_compile', filepath], 
                          capture_output=True, text=True)
    if result.returncode == 0:
        print("‚úÖ –§–∞–π–ª –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫!")
    else:
        print("‚ùå –í—Å–µ –µ—â–µ –µ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:")
        print(result.stderr)

if __name__ == "__main__":
    main()
